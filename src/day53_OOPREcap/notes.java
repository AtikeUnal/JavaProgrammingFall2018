package day53_OOPREcap;

public class notes {

	/**
	 * ABSTRACTION

ABSTRACT CLASS--
-HIGH LEVEL IDEA
-CANT BE INSTANTIATED
-TO MAKE A CLASS ABSTRACT YOU USE "ABSTRACT" KEYWORD
-USE EXTENDS KEYWORD TO EXTEND
-CAN CONTAIN REGULAR METHODS
-ABSTRACT METHODS DOES NOT HAVE BODY
-ALL CONCRETE CLASSES THAT ARE EXTENDING TO ABSTRACT CLASS MUST IMPLEMENT ALL THE ABSTRACT METHODS
-IF YOU CREATE EVEN ONE ABSTRACT METHOD, THE WHOLE CLASS MUST BECOME ABSTRACT


INTERFACE 
- IT NOT A CLASS
- USING IMPLEMENTS KEYWORD
- BY DEFAULT ALL THE METHODS ARE ABSTRACT
- BY DEFAULT FIELDS/VARIBLE ARE PUBLIC FINAL STATIC 
- INTERFACE CAN EXTEND TO MULTIPLE INTERFACE
- YOU NEED TO USE THE "DEFAULT" KEYWORD FOR METHODS
- INTERFACES DOES NOT HAVE CONSTRUCTORS


PRACTICE 6==============


/0 1 1 2 3 5 8 13 21 ....

Class Fibonacci
	-have an abstract method to print "n" number of fibonacci series
	-public abstract void beFibonacci(@param);

Class Artist1{

	-Extends to Fibonacci
	-Implement the method
	-Create a logic where you print out
	 */
}
